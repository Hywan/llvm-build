stages:
  - stage:
    displayName: Build
    jobs:
      # Ubuntu 16.04
      - template: /azure-pipelines/linux-build-job-template.yml
        parameters:
          baseName: 'Ubuntu1604'
          container: 'wavm/ubuntu16.04-builder:latest'

      # CentOS 7.0
      - template: /azure-pipelines/linux-build-job-template.yml
        parameters:
          baseName: 'Centos70'
          container: 'wavm/centos7.0-builder:latest'

      # Win32
      - template: /azure-pipelines/windows-build-job-template.yml
        parameters:
          baseName: 'Win32'
          platform: 'Win32'

      # Win64
      - template: /azure-pipelines/windows-build-job-template.yml
        parameters:
          baseName: 'Win64'
          platform: 'x64'

      # MacOS 10.14
      - template: /azure-pipelines/macos-build-job-template.yml
        parameters:
          baseName: 'MacOS'

  - stage:
    # Only upload a GitHub release if this is a release branch (implies it's not a pull request).
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
    displayName: Create GitHub release
    jobs:
      - job: UploadGitHubRelease
        pool:
          vmImage: windows-2019
        steps:
        # Download all the artifacts uploaded by the jobs in the Build stage.
        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: current
            targetPath: $(Build.ArtifactStagingDirectory)
        # Create a GitHub release containing the artifacts.
        - task: GitHubRelease@0
          inputs:
            gitHubConnection: GitHub-WAVM-AzurePipelines
            action: edit
            target: $(Build.SourceVersion)
            tagSource: manual
            tag: $(Build.SourceBranchName)
            title: $(Build.SourceBranchName)
            assets: $(Build.ArtifactStagingDirectory)/**/*.zip
            releaseNotesSource: input
            releaseNotes:
            addChangeLog: false